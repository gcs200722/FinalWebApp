@model FinalWebApp.ViewModels.ItemViewModel
@{
    bool isCreate = Model == null || Model.Id == Guid.Empty;
    ViewData["Title"] = isCreate ? "Create Item" : "Edit Item";
    string actionName = isCreate ? "Create" : "Edit";
    string buttonName = actionName;
}


<h1 class="page-title">@ViewData["Title"]</h1>
<hr />

<div class="content-container">
    <!-- Form Container -->
    <div class="form-container shadow-sm">
        <form asp-action="@actionName" method="post" enctype="multipart/form-data">
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control input-style" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Description" class="control-label"></label>
                <textarea asp-for="Description" class="form-control input-style" rows="2"></textarea>
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="CategoryId" class="control-label">Category</label>
                <select asp-for="CategoryId" asp-items="ViewBag.Categories" class="form-control input-style"></select>
                <span asp-validation-for="CategoryId" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Price" class="control-label"></label>
                <input asp-for="Price" type="number" step="0.01" class="form-control input-style" />
                <span asp-validation-for="Price" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Image" class="control-label">Choose Image</label>
                <div class="custom-file">
                    <input asp-for="Image" type="file" class="custom-file-input" id="inputGroupFile02" accept="image/*" />
                    <label class="custom-file-label" for="inputGroupFile02">Choose file</label>
                </div>
                <img id="imagePreview" src="" alt="Image preview" class="img-thumbnail mt-3" style="display:none; max-width: 200px;" />
                <span asp-validation-for="Image" class="text-danger"></span>
            </div>

            <div class="form-group text-center">
                <input type="submit" value="@buttonName" class="btn btn-primary btn-block mt-4" />
            </div>
        </form>
    </div>

    <!-- Display List of Items -->
    <div class="item-list-container shadow-sm">
        <div class="col-md-12">
            @await Component.InvokeAsync("ItemList")
        </div>
    </div>
</div>

<script>
    document.querySelector('.custom-file-input').addEventListener('change', function (event) {
        var input = event.target;
        var label = input.nextElementSibling;
        var fileName = input.files.length > 0 ? input.files[0].name : 'Choose file';
        label.innerText = fileName;

        var preview = document.getElementById('imagePreview');
        preview.src = '';

        if (input.files.length > 0) {
            var reader = new FileReader();
            reader.onload = function (e) {
                preview.src = e.target.result;
                preview.style.display = 'block';
            };
            reader.readAsDataURL(input.files[0]);
        }
    });
</script>


<style>
    /* Body Styling */
    body {
        font-family: 'Poppins', sans-serif;
        background: linear-gradient(135deg, #f9f9f9, #eceff1);
        color: #333;
        padding: 20px;
    }

    h1 {
        color: #2c3e50;
        font-size: 36px;
        font-weight: bold;
        text-align: center;
        margin-bottom: 20px;
    }

    /* Container for Form and List */
    .content-container {
        display: flex;
        width: 100%;
        gap: 20px;
        padding-bottom: 50px;
    }

    .form-container {
        flex: 0 0 30%; 
        background-color: #f9f9f9;
        padding: 20px;
        border-radius: 10px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        display: flex;
        justify-content: center;
        align-items: center;
        height: auto; 
    }

    .item-list-container {
        flex: 0 0 70%; 
        background-color: #ffffff;
        padding: 20px;
        border-radius: 10px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        overflow-y: auto; 
    }

    /* Form Styles */
    table {
        width: 100%;
        margin-bottom: 20px;
    }

    td {
        padding: 10px;
        vertical-align: top;
    }

    .input-style {
        padding: 8px 12px;
        height: 50px; 
        border: 1px solid #ddd;
        border-radius: 8px;
        transition: border-color 0.3s, box-shadow 0.3s;
    }

    .input-style:focus {
        border-color: #3498db;
        box-shadow: 0 0 8px rgba(52, 152, 219, 0.5);
    }

    .form-group {
        margin-bottom: 15px;
    }

    /* File Upload */
    .custom-file-label {
        border-radius: 8px;
        background-color: #3498db;
        color: white;
        padding: 10px;
        cursor: pointer;
        display: inline-block;
    }

    .custom-file-input {
        display: none;
    }

    img.img-thumbnail {
        border: 2px solid #ddd;
        border-radius: 10px;
        max-width: 200px;
        margin-top: 10px;
    }


    
</style>
