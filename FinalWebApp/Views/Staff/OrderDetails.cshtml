@using FinalWebApp.Enum
@model FinalWebApp.Data.Entities.Order


    <div class="container">
        <h2 class="header">
            Order Details
        @if (Model.OrderStatus == OrderStatusEnum.Pending || Model.OrderStatus == OrderStatusEnum.Confirmed)
        {
            <form id="orderStatusForm" method="post" asp-action="UpdateOrderStatus" class="status-form">
                <input type="hidden" name="orderId" value="@Model.Id" />
                <div class="btn-group">
                    @if (Model.OrderStatus == OrderStatusEnum.Pending)
                    {
                        <input type="radio" class="btn-check" name="status" value="Confirmed" id="confirmed-@Model.Id" onchange="submitForm(this)">
                        <label class="btn btn-outline-primary btn-sm" for="confirmed-@Model.Id">Confirm</label>

                        <input type="radio" class="btn-check" name="status" value="Canceled" id="canceled-@Model.Id" onchange="submitForm(this)">
                        <label class="btn btn-outline-danger btn-sm" for="canceled-@Model.Id">Cancel</label>
                    }
                    else if (Model.OrderStatus == OrderStatusEnum.Confirmed)
                    {
                        <input type="radio" class="btn-check" name="status" value="Unpaid" id="unpaid-@Model.Id" onchange="submitForm(this)">
                        <label class="btn btn-outline-success btn-sm" for="unpaid-@Model.Id">Unpaid</label>
                    }
                </div>

            </form>
        }
        <div>
            @if (Model.OrderStatus == OrderStatusEnum.Unpaid)
            {
                <a asp-action="Checkout" asp-route-orderId="@Model.Id" class="btn btn-primary">Checkout</a>
            }
            </div>
        </h2>

        <div class="details">
            <p><strong>Order ID:</strong> @Model.Id</p>
            <p><strong>Order Date:</strong> @Model.OrderDate.ToString("dd/MM/yyyy HH:mm")</p>
            <p><strong>Dining Time:</strong> @Model.DiningTime.ToString("dd/MM/yyyy HH:mm")</p>
            <p><strong>Customer:</strong> @Model.Customer?.Fullname</p>
            <p><strong>Table:</strong> @Model.Table?.Name</p>
            <p><strong>Order Status:</strong> @Model.OrderStatus.ToString()</p>
            <p><strong>Total Amount:</strong> @Model.TotalAmount.ToString("C")</p>
        </div>

        <h3>Order Items</h3>
        <div class="table-wrapper">
            <table class="table">
                <thead>
                    <tr>
                        <th>Food Name</th>
                        <th>Quantity</th>
                        <th>Price</th>
                        <th>Total</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.OrderItems)
                    {
                        <tr>
                            <td>@item.Item.Name</td>
                            <td>@item.Quantity</td>
                            <td>@item.Price.ToString("C")</td>
                            <td>@(item.Quantity * item.Price).ToString("C")</td>
                            <td>
                                <form asp-action="UpdateQuantity" asp-route-orderId="@Model.Id" asp-route-orderItemId="@item.Id" method="post" class="quantity-form">
                                    <input type="hidden" name="quantity" value="@Math.Max(item.Quantity - 1, 1)" />
                                    <button type="submit" class="btn btn-danger btn-sm" @(item.Quantity == 1 ? "disabled" : "")>-</button>
                                </form>

                            <form asp-action="UpdateQuantity" asp-route-orderId="@Model.Id" asp-route-orderItemId="@item.Id" method="post" class="quantity-form">
                                <input type="hidden" name="quantity" value="@item.Quantity + 1" />
                                <button type="submit" class="btn btn-danger btn-sm">
                                    <i class="fa fa-trash"></i> 
                                </button>
                            </form>

                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        @if (Model.OrderStatus == OrderStatusEnum.Unpaid)
        {
            <a asp-action="AddItem" asp-route-orderId="@Model.Id" class="btn btn-secondary">Add New</a>
        }
        <a asp-action="ListOrder" class="btn btn-secondary">Back to Order List</a>
    </div>

    <script>
    function submitForm(inputElement) {
        const form = inputElement.closest('form');
        if (form) {
            form.submit();
        }
    }

    </script>
<style>
    body {
        font-family: 'Poppins', sans-serif;
        background: linear-gradient(135deg, #f0f4ff, #e4e9f7);
        margin: 0;
        padding: 0;
    }

    .container {
        max-width: 90%;
        margin: 20px auto;
        padding: 20px;
        background: #ffffff;
        border-radius: 15px;
        box-shadow: inset 5px 5px 15px #d4d4d4, inset -5px -5px 15px #ffffff;
    }

    h2, h3 {
        font-size: 1.8rem;
        font-weight: 600;
        color: #333;
        text-align: center;
        margin-bottom: 20px;
    }

    .details p {
        font-size: 1rem;
        margin: 5px 0;
    }

    .table-wrapper {
        overflow-x: auto;
        margin-top: 20px;
    }

    .table {
        width: 100% ;
        border-collapse: collapse;
        margin: 20px 0;
        border-radius: 12px;
        overflow: hidden;
        background: #f9f9f9;
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
    }

    thead {
        background: #4CAF50;
        color: #fff;
    }

    th, td {
        padding: 12px 15px;
        text-align: left;
    }

    tr:nth-child(even) {
        background: #e0f7e7;
    }


    .btn {
        padding: 10px 20px;
        border-radius: 25px;
        font-size: 14px;
        font-weight: 600;
        border: none;
        cursor: pointer;
        transition: all 0.3s ease;
    }

    .btn-primary {
        background: #4CAF50;
    }



    .btn-secondary {
        background: #6c757d;
    }

        .btn-secondary:hover {
            background: #5a6268;
        }

    .btn-sm {
        padding: 5px 10px;
        font-size: 12px;
    }

    .quantity-form {
        display: inline-block;
    }
    .status-form .btn-outline-primary,
.status-form .btn-outline-danger,
.status-form .btn-outline-success {
    font-size: 16px; /* Tăng kích thước font */
    padding: 10px 20px; /* Tăng khoảng cách */
    border-width: 2px; /* Làm đậm viền */
    transition: all 0.3s ease; /* Hiệu ứng chuyển đổi khi hover */
}

/* Hiệu ứng hover */
.status-form .btn-outline-primary:hover {
    background-color: #007bff;
    color: #fff;
    border-color: #0056b3;
}

.status-form .btn-outline-danger:hover {
    background-color: #dc3545;
    color: #fff;
    border-color: #b21f2d;
}

.status-form .btn-outline-success:hover {
    background-color: #28a745;
    color: #fff;
    border-color: #19692c;
}

/* Nút Checkout */
.btn-primary {
    font-size: 18px; /* Tăng kích thước font */
    padding: 12px 24px; /* Tăng khoảng cách */
    background-color: #4caf50; /* Xanh lá */
    color: #fff;
    border-radius: 25px; /* Bo tròn */
    transition: all 0.3s ease;
}

.btn-primary:hover {
    background-color: #45a049; /* Xanh đậm hơn */
    box-shadow: 0 8px 15px rgba(0, 0, 0, 0.2); /* Hiệu ứng bóng khi hover */
}
</style>


