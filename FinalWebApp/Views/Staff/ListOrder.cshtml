
@using FinalWebApp.Enum
@model IEnumerable<FinalWebApp.Data.Entities.Order>

<h2>Order Management</h2>

<form method="get" asp-action="ListOrder" class="mb-3">
    <div class="row g-3">
        <!-- Order Status Filter -->
        <div class="col-auto">
            <label class="form-label fw-bold">Order Status</label>
            <div>
                @foreach (var status in Enum.GetValues(typeof(OrderStatusEnum)))
                {
                    <div class="form-check form-check-inline">
                        <input type="radio" class="form-check-input" name="orderStatus" value="@status"
                               id="orderStatus-@status" @(Context.Request.Query["orderStatus"] == status.ToString() ? "checked" : "")>
                        <label class="form-check-label" for="orderStatus-@status">@status</label>
                    </div>
                }
                <div class="form-check form-check-inline">
                    <input type="radio" class="form-check-input" name="orderStatus" value="" id="orderStatus-All"
                           @(string.IsNullOrEmpty(Context.Request.Query["orderStatus"]) ? "checked" : "")>
                    <label class="form-check-label" for="orderStatus-All">All</label>
                </div>
            </div>
        </div>

        <!-- Table Status Filter -->
        <div class="col-auto">
            <label class="form-label fw-bold">Table Status</label>
            <div>
                @foreach (var status in Enum.GetValues(typeof(StatusTableEnum)))
                {
                    <div class="form-check form-check-inline">
                        <input type="radio" class="form-check-input" name="tableStatus" value="@status"
                               id="tableStatus-@status" @(Context.Request.Query["tableStatus"] == status.ToString() ? "checked" : "")>
                        <label class="form-check-label" for="tableStatus-@status">@status</label>
                    </div>
                }
                <div class="form-check form-check-inline">
                    <input type="radio" class="form-check-input" name="tableStatus" value="" id="tableStatus-All"
                           @(string.IsNullOrEmpty(Context.Request.Query["tableStatus"]) ? "checked" : "")>
                    <label class="form-check-label" for="tableStatus-All">All</label>
                </div>
            </div>
        </div>

        <!-- Submit Button -->
        <div class="col-auto">
            <button type="submit" class="btn btn-primary mt-4">Filter</button>
        </div>
    </div>
</form>

<table class="table table-striped table-hover">
    <thead class="table-dark">
        <tr>
            <th>Order ID</th>
            <th>Order Date</th>
            <th>Order Status</th>
            <th>Table</th>
            <th>Table Status</th>
            <th>Customer</th>
            <th>Update</th>
            <th>View Item</th>
        </tr>
    </thead>
   <tbody>
    @if (!Model.Any())
    {
        <tr>
            <td colspan="7" class="text-center">No orders found matching the selected filters.</td>
        </tr>
    }
    else
    {
        @foreach (var order in Model)
        {
            <tr>
                <td>@order.Id</td>
                <td>@order.OrderDate.ToString("dd/MM/yyyy HH:mm")</td>
                <td>
                    <span class="badge
                        @(
                          order.OrderStatus == OrderStatusEnum.Confirmed ? "bg-primary" :       
                            order.OrderStatus == OrderStatusEnum.Unpaid ? "bg-success" :
                        order.OrderStatus == OrderStatusEnum.Paid ? "bg-warning" :
                          "bg-danger")">
                        @order.OrderStatus.ToString()
                    </span>
                </td>
                <td>@order.Table?.Name</td>
                <td>
                    <span class="badge
                        @(
                          order.Table?.Status == StatusTableEnum.Empty ? "bg-success" :
                          order.Table?.Status == StatusTableEnum.Booked ? "bg-warning" :
                          order.Table?.Status == StatusTableEnum.Active ? "bg-info" :
                          "bg-secondary")">
                        @order.Table?.Status.ToString() 
                    </span>
                </td>
                <td>@order.Customer?.Fullname </td>
                    <td>
                        @if (order.OrderStatus != OrderStatusEnum.Paid && order.OrderStatus != OrderStatusEnum.Canceled)
                        {
                            <form method="post" asp-action="UpdateOrderStatus" class="d-inline">
                                <input type="hidden" name="orderId" value="@order.Id" />
                                <div class="btn-group" role="group">
                                    @if (order.OrderStatus == OrderStatusEnum.Pending)
                                    {
                                        <input type="radio" class="btn-check" name="status" value="Confirmed"
                                               id="confirmed-@order.Id">
                                        <label class="btn btn-outline-primary btn-sm" for="confirmed-@order.Id">Confirm</label>

                                        <input type="radio" class="btn-check" name="status" value="Canceled"
                                               id="canceled-@order.Id">
                                        <label class="btn btn-outline-danger btn-sm" for="canceled-@order.Id">Cancel</label>
                                    }
                                    else if (order.OrderStatus == OrderStatusEnum.Confirmed)
                                    {
                                        <input type="radio" class="btn-check" name="status" value="Unpaid"
                                               id="unpaid-@order.Id">
                                        <label class="btn btn-outline-success btn-sm" for="unpaid-@order.Id">Unpaid</label>

                                        <input type="radio" class="btn-check" name="status" value="Paid"
                                               id="paid-@order.Id">
                                        <label class="btn btn-outline-warning btn-sm" for="paid-@order.Id">Paid</label>
                                    }
                                    else if (order.OrderStatus == OrderStatusEnum.Unpaid)
                                    {
                                        <input type="radio" class="btn-check" name="status" value="Paid"
                                               id="paid-@order.Id">
                                        <label class="btn btn-outline-warning btn-sm" for="paid-@order.Id">Paid</label>
                                    }
                                </div>
                                <button type="submit" class="btn btn-sm btn-primary mt-2">Update</button>
                            </form>
                        }

                    </td>
                    <td>
                        @if (order.Table?.Status == StatusTableEnum.Active)
                        {
                            <a asp-action="OrderDetails" asp-route-orderId="@order.Id" class="btn btn-info btn-sm">
                                View Items
                            </a>
                        }
                    </td>
            </tr>
        }
    }
</tbody>

</table>
